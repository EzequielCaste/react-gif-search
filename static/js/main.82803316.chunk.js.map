{"version":3,"sources":["helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/SearchBox.js","GifSearchApp.js","index.js"],"names":["getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","useState","loading","state","setState","useEffect","then","useFetchGifs","key","SearchBox","setCategory","inputValue","setinputValue","onSubmit","e","preventDefault","type","value","onChange","target","GifSearchApp","ReactDOM","render","document","getElementById"],"mappings":"6MAAaA,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAERC,QAAQC,IAAIF,GAENG,EAAOH,EAAKI,KAAK,SAAAC,GAAG,MAAK,CAC7BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAKU,EAAIG,OAAOC,iBAAiBd,QAZd,kBAgBdQ,GAhBc,4CAAH,sD,OCEPO,EAAc,SAAC,GAAmB,EAAjBJ,GAAkB,IAAXD,EAAU,sBACrCV,EAAeU,EAAfV,IAAKY,EAAUF,EAAVE,MAEZ,OACC,yBAAKI,UAAU,qDACb,yBAAKC,IAAKjB,EAAKkB,IAAKN,MCHbO,EAAU,SAAC,GAAgB,IAAD,ECDX,SAACrB,GAAc,IAAD,EAEdsB,mBAAS,CACjCf,KAAM,GACNgB,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAET3B,EAAQC,GACP2B,MAAM,SAAAf,GAAG,OACRa,EAAS,CACPlB,KAAMK,EACNW,SAAS,SAIZ,CAACvB,IAEGwB,EDhBiBI,CAFa,EAAd5B,UAEhBO,EAF8B,EAE9BA,KAAMgB,EAFwB,EAExBA,QACb,OACE,yBAAKL,UAAU,YACXK,GAAU,0CAEXhB,EAAKI,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,SEV1BkB,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERT,mBAAS,IAFD,mBAErCU,EAFqC,KAEzBC,EAFyB,KAa5C,OACE,yBAAKf,UAAU,aACX,0BAAMgB,SAXS,SAACC,GACpBA,EAAEC,iBACFL,EAAYC,KAUN,2BACEK,KAAK,OACLC,MAAQN,EACRO,SAVW,SAACJ,GACpBF,EAAeE,EAAEK,OAAOF,aCPfG,G,MAAe,WAAO,IAAD,EAEAnB,mBAAS,IAFT,mBAEzBtB,EAFyB,KAEf+B,EAFe,KAIhC,OACE,8BACE,+CACA,6BACA,kBAAC,EAAD,CAAWA,YAAcA,IAEvB/B,GAAY,kBAAC,EAAD,CAASA,SAAUA,OCXvC0C,IAASC,OAAQ,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.82803316.chunk.js","sourcesContent":["export const getGifs = async(category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Y13YNSxyHCUX3xAYuPwAORkqaVmJhtz1`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();  \r\n\r\n  console.log(data);\r\n \r\n  const gifs = data.map( img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images.downsized_medium.url\r\n    })\r\n  )\r\n\r\n  return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, ...img }) => {\r\n  const { url, title } = img;\r\n  \r\n   return (\r\n    <div className=\"animate__animated animate__fadeIn animate__slower\">\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {  \r\n\r\n  const {data, loading} = useFetchGifs(category);\r\n  return (   \r\n    <div className=\"gif-grid\">\r\n      { loading&& <h3>Loading...</h3>}\r\n     {\r\n       data.map( img => (\r\n         <GifGridItem key={img.id} {...img} />\r\n       ))\r\n     }\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });  \r\n  \r\n  useEffect( () => {\r\n\r\n    getGifs(category)\r\n    .then( img => ( \r\n      setState({\r\n        data: img,\r\n        loading: false\r\n      }) \r\n    ))\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react'\r\n\r\nexport const SearchBox = ({ setCategory }) => {\r\n\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();   \r\n    setCategory(inputValue);\r\n  };    \r\n\r\n  const handleChange = (e) => {\r\n    setinputValue( e.target.value );\r\n  }\r\n\r\n  return (\r\n    <div className=\"searchBox\">\r\n        <form onSubmit={ handleSubmit }>\r\n          <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleChange }  \r\n          />\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport { SearchBox } from './components/SearchBox';\r\nimport './style.css';\r\n\r\nexport const GifSearchApp = () => {    \r\n\r\n  const [category, setCategory] = useState(''); \r\n\r\n  return (\r\n    <main>\r\n      <h2>Search for GIFs</h2>\r\n      <hr/>\r\n      <SearchBox setCategory={ setCategory } />      \r\n      {\r\n        category && <GifGrid category={category} />\r\n      }\r\n    </main>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifSearchApp } from './GifSearchApp';\r\n\r\nReactDOM.render( <GifSearchApp />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}